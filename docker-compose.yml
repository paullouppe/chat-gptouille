services:
  api:
    build: ./api
    volumes:
      - ./api/app:/code/app
    ports:
      - 8080:80
      - 11434:11434
    env_file:
      - ./api/.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - ntwrk
    develop:
      watch:
        - path: ./api
          action: rebuild
          target: /code

  db:
    image: postgres:13-alpine
    user: postgres
    env_file:
      - ./db/.env
    environment:
      - POSTGRES_DB=recipe
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/recipes.csv:/db/recipes.csv
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    networks:
      - ntwrk
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d recipe"]
      interval: 1s
      timeout: 5s
      retries: 10

  #en production, d√©sactiver adminer
  adminer:
    image: adminer
    ports:
      - 8181:8080
    networks:
      - ntwrk

networks:
  ntwrk:
    driver: bridge

volumes:
  postgres_data:
